{"version":3,"sources":["store/list/types.ts","pages/paths.ts","store/list/reducers.ts","services/listService.ts","store/index.ts","pages/error/index.tsx","store/list/selectors.ts","services/_apiService.ts","models/carrierModel.ts","store/list/actions.ts","components/itemList/index.tsx","components/spin/index.tsx","pages/list/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/itemList/styles.module.scss","pages/list/styles.module.scss","pages/error/styles.module.scss","components/spin/styles.module.scss"],"names":["EListActionType","paths","EListEndpoints","initialState","list","filter","isOnlyLikes","isLoading","listReducers","combineReducers","state","action","type","SET_LIST","payload","SET_LIKE","map","item","id","isLike","DELETE_ITEM","SET_FILTER","SET_LOADING","rootReducers","createStore","applyMiddleware","thunk","Error","className","styles","container","h1","subtitle","listSelector","store","filterSelector","isLoadingSelector","listDataSelector","getApiInstance","apiInstance","axios","create","baseURL","process","REACT_API","defaults","headers","get","Accept","interceptors","response","use","error","ListItemModel","fromAPI","v4","image","listService","fetchList","a","GET_LIST","resp","status","StatusCodes","OK","notification","message","description","data","deleteItem","setLike","setFilter","dispatch","ItemList","handleDelete","handleLikes","useCallback","img","src","alt","HeartFilled","like","onClick","HeartOutlined","DeleteOutlined","delete","React","memo","Spin","LoadingOutlined","connect","bindActionCreators","dispatchFilter","dispatchDelete","dispatchFetchList","dispatchLike","useState","currentData","setCurrentData","useEffect","wrapperFilter","length","text","App","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mHAEYA,E,8DCDCC,EACL,IADKA,EAEN,Q,kCDDKD,K,oBAAAA,E,wBAAAA,E,0BAAAA,E,oBAAAA,E,2BAAAA,M,KECL,ICIKE,EDJCC,EAA2B,CACpCC,KAAM,GACNC,OAAQ,CAAEC,aAAa,GACvBC,WAAW,GAwCFC,EAAeC,YAAgB,CACxCL,KAtCgB,WAAqF,IAApFM,EAAmF,uDAA3EP,EAAaC,KAAMO,EAAwD,uCACpG,OAAQA,EAAOC,MACX,KAAMZ,EAAgBa,SAClB,OAAOF,EAAOG,QAClB,KAAMd,EAAgBe,SAClB,OAAOL,EAAMM,KAAI,SAACC,GAAD,OAAWA,EAAKC,KAAOP,EAAOG,QAAnB,2BACrBG,GADqB,IAExBE,QAASF,EAAKE,SACdF,KAER,KAAMjB,EAAgBoB,YAClB,OAAOV,EAAML,QAAO,SAACY,GAAD,OAAWA,EAAKC,KAAOP,EAAOG,WACtD,QACI,OAAOJ,IA0BfL,OAtBkB,WAA+E,IAA9EK,EAA6E,uDAArEP,EAAaE,OAAQM,EAAgD,uCAChG,OAAQA,EAAOC,MACX,KAAMZ,EAAgBqB,WAClB,OAAOV,EAAOG,QAClB,QACI,OAAOJ,IAkBfH,UAdqB,WAA4E,IAA3EG,EAA0E,uDAAlEP,EAAaI,UAAWI,EAA0C,uCAChG,OAAQA,EAAOC,MACX,KAAMZ,EAAgBsB,YAClB,OAAOX,EAAOG,QAClB,KAAMd,EAAgBa,SAClB,OAAO,EACX,QACI,OAAOH,MEpCNa,EAAwBd,YAA4B,CAACL,SAEnDoB,cAAYD,EAAcE,YAAgBC,M,wBCE1CC,EAPS,kBACpB,sBAAKC,UAAWC,IAAOC,UAAvB,UACQ,qBAAKF,UAAWC,IAAOE,GAAvB,sHACA,qBAAKH,UAAWC,IAAOG,SAAvB,0D,iCCHCC,EAAe,SAACC,GAAD,OAAmCA,EAAM9B,MACxD+B,EAAiB,SAACD,GAAD,OAAmCD,EAAaC,GAAO7B,QACxE+B,EAAoB,SAACF,GAAD,OAAgCD,EAAaC,GAAO3B,WACxE8B,EAAmB,SAACH,GAAD,OAAmCD,EAAaC,GAAO9B,M,kDCF1EkC,EAAiB,WAC7B,IAAMC,EAA6BC,IAAMC,OAAO,CAC/CC,QAASC,mIAAYC,YAStB,OAPAL,EAAYM,SAASH,QANV,kCAOXH,EAAYM,SAASC,QAAQC,IAAIC,OAAS,mBAC1CT,EAAYU,aAAaC,SAASC,KACjC,SAACD,GAAD,OAA6BA,KAC7B,SAACE,GAAD,OAAuBA,EAAMF,YAGvBX,G,kBCJOc,EATO,CACrBC,QADqB,SACbrC,GACP,MAAO,CACNC,GAAIqC,cACJpC,QAAQ,EACTqC,MAAOvC,M,SLAGf,K,oBAAAA,M,KAIZ,IAmBeuD,EAnBK,CACnBC,UAAU,WAAD,4BAAE,8BAAAC,EAAA,+EAEgDrB,IAAiBS,IAAI7C,EAAe0D,UAFpF,WAEHC,EAFG,QAGAC,SAAWC,IAAYC,GAHvB,uBAIRC,IAAab,MAAM,CAClBc,QAAS,gJACTC,YACC,4GAPM,kBASA,IATA,0CAWFN,EAAKO,YAXH,aAWF,EAAWF,QAAQlD,KAAI,SAAAC,GAAI,OAAIoC,EAAcC,QAAQrC,OAXnD,2DAaF,IAbE,0DAAF,kDAAC,IMEEoD,EAAa,SAACnD,GAAD,MAAmC,CAC5DN,KAAMZ,EAAgBoB,YACtBN,QAASI,IAGGoD,EAAU,SAACpD,GAAD,MAAkC,CACxDN,KAAMZ,EAAgBe,SACtBD,QAASI,IAGGqD,EAAY,SAAClE,GAAD,MAA2C,CACnEO,KAAMZ,EAAgBqB,WACtBP,QAAST,IAQGqD,EAAsC,yDAClD,WAAOc,GAAP,eAAAb,EAAA,6DACAa,GAP0BjE,GAON,EAPiD,CACrEK,KAAMZ,EAAgBsB,YACtBR,QAASP,KAIT,SAEoBkD,EAAYC,YAFhC,YAEOG,EAFP,+BAICW,GA9BsBpE,EA8BLyD,EA9BgD,CAClEjD,KAAMZ,EAAgBa,SACtBC,QAASV,KAwBT,mBAKQ,GALR,iCAOQ,GAPR,iCA1BsB,IAACA,EAoBGG,IAM1B,OADkD,uD,4CCtB7CkE,EAAoC,SAAC,GAAoD,IAAnDjB,EAAkD,EAAlDA,MAAOrC,EAA2C,EAA3CA,OAAQuD,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,YAAazD,EAAQ,EAARA,GAE5EoD,EAAUM,uBAAY,WACxBD,EAAYzD,KACd,CAACyD,EAAazD,IAEVmD,EAAaO,uBAAY,WAC3BF,EAAaxD,KACf,CAACwD,EAAcxD,IAEjB,OAAQ,sBAAKU,UAAWC,IAAOC,UAAvB,UACJ,qBAAKF,UAAWC,IAAOgD,IAAKC,IAAKtB,EAAOuB,IAAI,QACvC5D,EAAS,cAAC6D,EAAA,EAAD,CAAapD,UAAWC,IAAOoD,KAAMC,QAASZ,IACpD,cAACa,EAAA,EAAD,CAAevD,UAAWC,IAAOoD,KAAMC,QAASZ,IAC1D,cAACc,EAAA,EAAD,CAAiBxD,UAAWC,IAAOwD,OAAQH,QAASb,QAI3CiB,MAAMC,KAAKd,G,6BCrBXe,GAJQ,kBAAO,qBAAK5D,UAAWC,KAAOC,UAAvB,SAC1B,cAAC2D,GAAA,EAAD,OCgFWC,gBAdS,SAAChF,GAAD,MAAoC,CACxDN,KAAMiC,EAAiB3B,GACvBL,OAAQ8B,EAAezB,GACvBH,UAAW6B,EAAkB1B,OAGN,SAAC8D,GAAD,OAA6CmB,YAAmB,CACvFC,eAAgBrB,EAChBsB,eAAgBxB,EAChByB,kBAAmBpC,EACnBqC,aAAczB,GACfE,KAGYkB,EAjEuB,SAAC,GAQO,IAPHE,EAOE,EAPFA,eACAC,EAME,EANFA,eACAC,EAKE,EALFA,kBACAC,EAIE,EAJFA,aACA1F,EAGE,EAHFA,OACAD,EAEE,EAFFA,KACAG,EACE,EADFA,UACE,EACHyF,mBAAqB5F,GADlB,mBAClC6F,EADkC,KACrBC,EADqB,KAGzCC,qBAAU,WACNL,MACD,CAACA,IAEJK,qBAAU,WACF9F,EAAOC,YACP4F,EAAe9F,EAAKC,QAAO,SAACY,GAAD,OAAUA,EAAKE,WACvC+E,EAAe9F,KACvB,CAACA,EAAMC,EAAOC,cAEjB,IAAMiE,EAAYK,uBAAa,WAC3BgB,EAAe,CAACtF,aAAcD,EAAOC,gBACvC,CAACsF,EAAgBvF,EAAOC,cAE1B,OAAQ,sBAAKsB,UAAWC,IAAOC,UAAvB,UACCvB,GAAa,cAAC,GAAD,KACZA,GAAa,qCACb,qBAAKqB,UAAWC,IAAOuE,cAAvB,SACA,wBAAQxE,UAAWC,IAAOxB,OAClB6E,QAASX,EADjB,UAEW,OAANlE,QAAM,IAANA,OAAA,EAAAA,EAAQC,aAAc,sEAAiB,2KAG5C,gCACKD,EAAOC,aAAuC,KAAb,OAAX2F,QAAW,IAAXA,OAAA,EAAAA,EAAaI,SACpC,qBAAKzE,UAAWC,IAAOyE,KAAvB,wPACCL,GAAsC,IAAvBA,EAAYI,QAAgBJ,EAAYjF,KAAI,SAACC,GAAD,OACxD,cAAC,EAAD,CACUuC,MAAOvC,EAAKuC,MACZrC,OAAQF,EAAKE,OACbuD,aAAcmB,EACdlB,YAAaoB,EACb7E,GAAID,EAAKC,IALJD,EAAKC,mBCjC3BqF,OAhBf,WACE,OACI,qBAAK3E,UAAU,MAAf,SACA,cAAC,IAAD,CAAUM,MAAOA,EAAjB,SACE,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAMxG,EAAcyG,UAAW,kBAAM,cAAC,IAAD,CAAUC,GAAI1G,OAChE,cAAC,IAAD,CAAOuG,OAAK,EAACC,KAAMxG,EAAayG,UAAW,kBAAM,cAAC,GAAD,OACjD,cAAC,IAAD,CAAOD,KAAK,IAAIC,UAAW,kBAAM,cAAC,EAAD,iBCJlCE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M,mBCfAc,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,IAAM,oBAAoB,OAAS,uBAAuB,OAAS,yB,mBCAvJD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,OAAS,uBAAuB,KAAO,uB,mBCAvGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,GAAK,mBAAmB,SAAW,2B,mBCA3FD,EAAOC,QAAU,CAAC,UAAY,4B","file":"static/js/main.3a7d42c1.chunk.js","sourcesContent":["import { IActionType } from '../types';\r\n\r\nexport enum EListActionType {\r\n\tSET_LIST = 'SET_LIST',\r\n\tSET_FILTER = 'SET_FILTER',\r\n\tSET_LOADING = 'SET_LOADING',\r\n\tSET_LIKE = 'SET_LIKE',\r\n\tDELETE_ITEM = 'DELETE_ITEM'\r\n}\r\n\r\nexport type FilterType = {\r\n\tisOnlyLikes: boolean\r\n}\r\n\r\nexport type ListType = {\r\n\tid: string\r\n\timage: string\r\n\tisLike: boolean\r\n}\r\n\r\nexport interface IListState {\r\n\tlist: ListType[] | []\r\n\tfilter: FilterType\r\n\tisLoading: boolean\r\n}\r\n\r\nexport type ISetListAction = IActionType<EListActionType.SET_LIST, ListType[] | []>;\r\nexport type ISetFilterAction = IActionType<EListActionType.SET_FILTER, FilterType>;\r\nexport type ISetLoadingAction = IActionType<EListActionType.SET_LOADING, boolean>;\r\nexport type ISetLikesAction = IActionType<EListActionType.SET_LIKE, string>;\r\nexport type ISetDeleteAction = IActionType<EListActionType.DELETE_ITEM, string>;\r\n\r\nexport interface ActionType<T> {\r\n\ttype: EListActionType\r\n\tpayload:T\r\n\r\n}\r\n","\nexport const paths = {\n\tindex: '/',\n\tlist: '/list',\n\terror: '/error'\n};\n","import {combineReducers} from 'redux';\r\nimport {ActionType, EListActionType, FilterType, IListState, ListType} from './types';\r\n\r\nexport const initialState: IListState = {\r\n    list: [],\r\n    filter: { isOnlyLikes: false },\r\n    isLoading: false\r\n};\r\n\r\nexport const list = (state = initialState.list, action: ActionType<string | ListType[]>): ListType[] => {\r\n    switch (action.type) {\r\n        case (EListActionType.SET_LIST):\r\n            return action.payload as ListType[];\r\n        case (EListActionType.SET_LIKE): {\r\n            return state.map((item) => (item.id === action.payload ? {\r\n                ...item,\r\n                isLike: !item.isLike\r\n            } : item))\r\n        }\r\n        case (EListActionType.DELETE_ITEM):\r\n            return state.filter((item) => (item.id !== action.payload))\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const filter = (state = initialState.filter, action: ActionType<FilterType>): FilterType  => {\r\n    switch (action.type) {\r\n        case (EListActionType.SET_FILTER):\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const isLoading = (state = initialState.isLoading, action: ActionType<boolean>): boolean  => {\r\n    switch (action.type) {\r\n        case (EListActionType.SET_LOADING):\r\n            return action.payload;\r\n        case (EListActionType.SET_LIST):\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const listReducers = combineReducers({\r\n    list,\r\n    filter,\r\n    isLoading\r\n});\r\n","import { AxiosResponse } from 'axios';\r\nimport StatusCodes from 'http-status-codes';\r\nimport { getApiInstance } from './_apiService';\r\nimport { ListType } from \"../store/list/types\";\r\nimport {notification} from \"antd\";\r\nimport ListItemModel from \"../models/carrierModel\";\r\n\r\nexport enum EListEndpoints {\r\n\tGET_LIST = '/images',\r\n}\r\n\r\nconst listService = {\r\n\tfetchList: async (): Promise<ListType[]> => {\r\n\t\ttry {\r\n\t\t\tconst resp: AxiosResponse<{ message: string[] }> = await getApiInstance().get(EListEndpoints.GET_LIST);\r\n\t\t\tif (resp.status !== StatusCodes.OK) {\r\n\t\t\t\tnotification.error({\r\n\t\t\t\t\tmessage: 'Не удалось получить данные',\r\n\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t'Попробуйте позднее',\r\n\t\t\t\t});\r\n\t\t\t\treturn  [] as ListType[];\r\n\t\t\t}\r\n\t\t\treturn resp.data?.message.map(item => ListItemModel.fromAPI(item));\r\n\t\t} catch (err) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport default listService;\r\n","import { Reducer, combineReducers, applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { listReducers as list } from './list/reducers';\r\nimport { IRootState } from './types';\r\n\r\n// @ts-ignore\r\nexport const rootReducers: Reducer = combineReducers<IRootState>({list});\r\n\r\nexport default createStore(rootReducers, applyMiddleware(thunk));\r\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst Error: React.FC = () => (\n    <div className={styles.container}>\n            <div className={styles.h1}>Страница не найдена</div>\n            <div className={styles.subtitle}>ошибка 404</div>\n    </div>\n);\n\nexport default Error;\n","import { IRootState } from '../types';\r\nimport {FilterType, IListState, ListType} from './types';\r\n\r\nexport const listSelector = (store: IRootState): IListState => store.list;\r\nexport const filterSelector = (store: IRootState): FilterType => listSelector(store).filter;\r\nexport const isLoadingSelector = (store: IRootState): boolean => listSelector(store).isLoading;\r\nexport const listDataSelector = (store: IRootState): ListType[] => listSelector(store).list;\r\n","import axios, { AxiosError, AxiosInstance, AxiosResponse } from 'axios';\r\n\r\nconst URL = 'https://dog.ceo/api/breed/hound';\r\n\r\nexport const getApiInstance = (): AxiosInstance => {\r\n\tconst apiInstance: AxiosInstance = axios.create({\r\n\t\tbaseURL: process.env.REACT_API,\r\n\t});\r\n\tapiInstance.defaults.baseURL = URL;\r\n\tapiInstance.defaults.headers.get.Accept = 'application/json';\r\n\tapiInstance.interceptors.response.use(\r\n\t\t(response: AxiosResponse) => response,\r\n\t\t(error: AxiosError) => error.response,\r\n\t);\r\n\r\n\treturn apiInstance;\r\n};\r\n","import { v4 } from 'uuid';\n\nconst ListItemModel = {\n\tfromAPI(item: string) {\n\t\treturn {\n\t\t\tid: v4(),\n\t\t\tisLike: false,\n\t\timage: item};\n\t},\n};\n\nexport default ListItemModel;\n","import {Dispatch} from 'redux';\r\nimport listService from '../../services/listService';\r\nimport {AsyncActionType} from '../types';\r\nimport {\r\n\tEListActionType, FilterType, ISetDeleteAction, ISetFilterAction, ISetLikesAction,\r\n\tISetListAction, ISetLoadingAction,\r\n\tListType\r\n} from './types';\r\n\r\nexport const setList = (list: ListType[] | []): ISetListAction => ({\r\n\ttype: EListActionType.SET_LIST,\r\n\tpayload: list,\r\n});\r\n\r\nexport const deleteItem = (id: string): ISetDeleteAction => ({\r\n\ttype: EListActionType.DELETE_ITEM,\r\n\tpayload: id,\r\n})\r\n\r\nexport const setLike = (id: string): ISetLikesAction => ({\r\n\ttype: EListActionType.SET_LIKE,\r\n\tpayload: id,\r\n})\r\n\r\nexport const setFilter = (filter: FilterType): ISetFilterAction => ({\r\n\ttype: EListActionType.SET_FILTER,\r\n\tpayload: filter,\r\n})\r\n\r\nexport const setLoading = (isLoading: boolean): ISetLoadingAction => ({\r\n\ttype: EListActionType.SET_LOADING,\r\n\tpayload: isLoading,\r\n})\r\n\r\nexport const fetchList: AsyncActionType<boolean> = () =>\r\n\tasync (dispatch: Dispatch): Promise<boolean> => {\r\n\tdispatch(setLoading(true))\r\n\t\tconst resp = await listService.fetchList();\r\n\tif(resp) {\r\n\t\tdispatch(setList(resp));\r\n\t\treturn true;\r\n\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\r\n","import React, {useCallback} from 'react';\nimport styles from './styles.module.scss';\nimport { HeartFilled, HeartOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\ntype ItemListProps = {\n    image: string,\n    isLike: boolean,\n    handleDelete: any\n    handleLikes: any\n    id: string\n}\n\nconst ItemList: React.FC<ItemListProps> = ({image, isLike, handleDelete, handleLikes, id}) => {\n\n    const setLike = useCallback(() => {\n        handleLikes(id);\n    },[handleLikes, id]);\n\n    const deleteItem = useCallback(() => {\n        handleDelete(id);\n    },[handleDelete, id])\n\n    return (<div className={styles.container}>\n        <img className={styles.img} src={image} alt='img'/>\n            {isLike ? <HeartFilled className={styles.like} onClick={setLike} /> :\n                <HeartOutlined className={styles.like} onClick={setLike} />}\n      <DeleteOutlined  className={styles.delete} onClick={deleteItem} />\n    </div>);\n}\n\nexport default React.memo(ItemList);\n","import React from 'react';\nimport styles from './styles.module.scss';\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\n\nconst Spin: React.FC = () => (<div className={styles.container}>\n    <LoadingOutlined />\n</div>);\n\nexport default Spin;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport styles from './styles.module.scss';\nimport {connect} from \"react-redux\";\nimport {filterSelector, isLoadingSelector, listDataSelector} from \"../../store/list/selectors\";\nimport {IRootState} from '../../store/types';\nimport { FilterType, IListState, ISetDeleteAction, ISetFilterAction, ISetLikesAction, ListType } from \"../../store/list/types\";\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { deleteItem, fetchList, setFilter, setLike } from \"../../store/list/actions\";\nimport ItemList from \"../../components/itemList\";\nimport Spin from \"../../components/spin\";\nimport { ThunkAction } from \"redux-thunk\";\n\ninterface IMapDispatchToProps {\n    dispatchFilter: (arg: FilterType) => ISetFilterAction\n    dispatchDelete: (arg: string) => ISetDeleteAction\n    dispatchFetchList: () => ThunkAction<Promise<boolean>, any, null, Action<boolean>>\n    dispatchLike: (arg: string) => ISetLikesAction\n}\n\ntype ListPropsType = IMapDispatchToProps & IListState;\n\nconst List: React.FC<ListPropsType> = ({\n                                           dispatchFilter,\n                                           dispatchDelete,\n                                           dispatchFetchList,\n                                           dispatchLike,\n                                           filter,\n                                           list,\n                                           isLoading,\n                                       }) => {\n    const [currentData, setCurrentData] = useState<ListType[]>(list);\n\n    useEffect(() => {\n        dispatchFetchList();\n    }, [dispatchFetchList]);\n\n    useEffect(() => {\n        if (filter.isOnlyLikes) {\n            setCurrentData(list.filter((item) => item.isLike));\n        } else setCurrentData(list);\n    }, [list, filter.isOnlyLikes]);\n\n    const setFilter = useCallback( () => {\n        dispatchFilter({isOnlyLikes: !filter.isOnlyLikes});\n    },[dispatchFilter, filter.isOnlyLikes]);\n\n    return (<div className={styles.container}>\n            {isLoading && <Spin />}\n            {!isLoading && <>\n              <div className={styles.wrapperFilter}>\n              <button className={styles.filter}\n                      onClick={setFilter}>\n                  {filter?.isOnlyLikes ? 'Показать все' : 'Показать только понравившиеся'}\n              </button>\n              </div>\n              <div>\n                  {filter.isOnlyLikes && currentData?.length === 0 &&\n                  <div className={styles.text}>Пока нет фотографий, которые вам понравились</div>}\n                  {currentData && currentData.length !== 0 && currentData.map((item) => (\n                      <ItemList key={item.id}\n                                image={item.image}\n                                isLike={item.isLike}\n                                handleDelete={dispatchDelete}\n                                handleLikes={dispatchLike}\n                                id={item.id} />\n                  ))}\n              </div>\n            </>}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state: IRootState): IListState => ({\n    list: listDataSelector(state),\n    filter: filterSelector(state),\n    isLoading: isLoadingSelector(state)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDispatchToProps => bindActionCreators({\n    dispatchFilter: setFilter,\n    dispatchDelete: deleteItem,\n    dispatchFetchList: fetchList,\n    dispatchLike: setLike,\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from 'react';\nimport './App.css';\n// @ts-ignore\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { paths } from \"./pages/paths\";\nimport store from './store';\nimport Error from './pages/error';\nimport { Provider } from 'react-redux';\nimport List from \"./pages/list\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n      <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n                <Route exact path={paths.index}  component={() => <Redirect to={paths.list} />} />\n                <Route exact path={paths.list}  component={() => <List />} />\n                <Route path='*' component={() => <Error />}/>\n                </Switch>\n        </BrowserRouter>\n      </Provider>\n      </div>\n  );\n}\n\nexport default App;\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__13P7S\",\"like\":\"styles_like__3fp4h\",\"img\":\"styles_img__1jPHc\",\"action\":\"styles_action__2a1Tj\",\"delete\":\"styles_delete__27JMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperFilter\":\"styles_wrapperFilter__9PY3O\",\"filter\":\"styles_filter__3c-q9\",\"text\":\"styles_text__2S4FG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1hqFm\",\"h1\":\"styles_h1__2t5Cj\",\"subtitle\":\"styles_subtitle__1NF5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EpXB\"};"],"sourceRoot":""}